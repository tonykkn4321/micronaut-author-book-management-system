plugins {
    id 'java'
    id 'io.micronaut.application' version '4.0.0'
    id 'io.micronaut.aot' version '4.0.0'
}

version = '0.1'
group = 'com.example'

repositories {
    mavenCentral()
}

micronaut {
    runtime 'netty'
    testRuntime 'junit5'
    processing {
        annotations 'com.example.*'
    }
}

dependencies {
    // Micronaut core
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut:micronaut-validation")

    // Micronaut Data JPA + Hibernate
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
    implementation("jakarta.persistence:jakarta.persistence-api")
    implementation("org.hibernate.orm:hibernate-core:6.4.0.Final")

    // JDBC drivers
    runtimeOnly("mysql:mysql-connector-java:8.0.33")       // ✅ MySQL for dev
    runtimeOnly("org.postgresql:postgresql:42.7.1")         // ✅ PostgreSQL for Railway

    // Micronaut Data JDBC
    implementation("io.micronaut.data:micronaut-data-jdbc")

    // Micronaut AOT (optional for faster startup)
    implementation("io.micronaut:micronaut-aot")

    // Testing
    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
}

application {
    mainClass.set("com.example.app.Application")
}

java {
    sourceCompatibility = JavaVersion.toVersion("17")
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.compilerArgs.add('-parameters')
}
